version: "3.8"

services:
  auth-database:
    image: postgres:15.3-alpine3.18
    restart: unless-stopped
    volumes:
      - auth_database:/var/lib/postgresql/data
    networks:
      - keycloak
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 2s
      start_period: 30s

  auth:
    build: ./infra/keycloak # Custom optimized Keycloak Dockerfile https://www.keycloak.org/server/containers
    restart: unless-stopped
    command:
      - start
    volumes:
      - keycloak_conf:/opt/keycloak/data/import/realm.json
      - ./infra/ssl-keys/:/opt/keycloak/ssl-keys
    networks:
      - keycloak
    ports:
      - "8443:8443"
    depends_on:
      auth-database:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL_HOST: auth-database
      KC_DB_USERNAME: keycloak
      KC_DB_DATABASE: keycloak
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_DB_SCHEMA: public
      KC_HOSTNAME_ADMIN_URL: ${BASE_URL}:8443
      KC_HOSTNAME_URL: ${BASE_URL}:8443
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/ssl-keys/freshbox.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/ssl-keys/freshbox.key
    healthcheck:
      test: [ "CMD", "curl", "-f","-k", "${BASE_URL}:8443" ]
      interval: 30s
      timeout: 2s
      start_period: 30s


  api-gateway:
    image: frontend
    restart: unless-stopped
    volumes:
      - ./infra/ssl-keys/freshbox.crt:/etc/ssl/certs/freshbox.crt
      - ./infra/ssl-keys/freshbox.key:/etc/ssl/private/freshbox.key
    networks:
      - api-gateway
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "${BASE_URL}"]
      interval: 30s
      timeout: 2s
      start_period: 10s


  api-payment:
    image: api-payment
    restart: unless-stopped
    networks:
      - api-gateway

  api-user:
    image: api-user
    restart: unless-stopped
    networks:
      - api-gateway
      - api-user-internal
    depends_on:
      api-user-db:
        condition: service_healthy
    environment:
      DB_HOST: api-user-db
      DB_PORT: 5432
      DB_USERNAME: internal
      DB_PASSWORD: ${API_USER_DB_PASSWORD}
      DB_NAME: user

    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 2s
      start_period: 5s

  api-user-db:
    image: postgres:15.3-alpine3.18
    restart: unless-stopped
    volumes:
      - user_database:/var/lib/postgresql/data
    networks:
      - api-user-internal
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: internal
      POSTGRES_PASSWORD: ${API_USER_DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 2s
      start_period: 15s
    ports:
      - "5432:5432"

  api-restaurant:
    image: api-restaurant
    restart: unless-stopped
    networks:
      - api-gateway

  api-order:
    image: api-order
    restart: unless-stopped
    networks:
      - api-gateway

volumes:
  keycloak_conf:
  auth_database:
  user_database:

networks:
  api-gateway:
    driver: "bridge"
  keycloak:
    driver: "bridge"
  api-user-internal:
    driver: "bridge"
    internal: false
